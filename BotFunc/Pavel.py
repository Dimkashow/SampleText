from BotFunc.config import *
from telebot import types
from BotFunc.models import User
from BotFunc.Dmitriy import apply_to_mentor
from BotFunc.Alexey import common_show_command_list

hide_markup = types.ReplyKeyboardRemove(selective=False)
msg_team_err = '''‚õî –û—à–∏–±–∫–∞, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –ø—É–Ω–∫—Ç—É. \
–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¢–∏–º–ª–∏–¥. –ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å \
–≤ –Ω–µ–π –µ—â–µ —Ä–∞–∑ –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–í–æ–∑–º–æ–∂–Ω–æ –í–∞—à –¢–∏–º–ª–∏–¥ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–ª –∫–æ–º–∞–Ω–¥—É**).'''


def list_teams_func():
    list_teams = list()
    all_users = User.objects.filter(role_command="TeamLead")
    for user in all_users:
        team_name = user.team
        list_teams.append(team_name)
    return list_teams


def alpha_in(str):
    for i in str:
        if i.isalpha():
            return 1
    return 0


def send_msg(bot, message, msg, width, *args):
    args = list(args)
    for i in range(len(args)):
        args[i] = types.KeyboardButton(args[i])
    buttons = [args[i: i + width] for i in range(0, len(args), width)]
    markup = types.ReplyKeyboardMarkup()
    for i in range(len(buttons)):
        print(buttons[i])
        markup.add(*buttons[i])
    bot.send_message(message.chat.id, msg, reply_markup=markup)


def check_name(txt: str, maxim=20, flag=0):
    if flag and txt == '-':
        return 1
    if not txt[0].isupper() or txt[0] in ' -':
        return 0
    if not 1 <= len(txt) <= maxim:
        return 0
    for i in range(1, len(txt)):
        if not txt[i].isalpha() and txt[i] not in '- ':
            return 0

    check = 0
    indexes = (txt.find(' '), txt.find('-'))
    for i in range(2):
        if indexes[i] == -1:
            check += 2
        else:
            check += alpha_in(txt[:indexes[i]])
            check += alpha_in(txt[indexes[i] + 1:])

    return 0 if check != 4 else 1


def check_team(txt, maxim=100):
    if not txt[0].isupper():
        return 0
    if not len(txt) <= maxim or len(txt) <= 2:
        return 0
    for i in range(1, len(txt)):
        if not txt[i].isalpha() and txt[i] not in '- _1234567890':
            return 0
    return 1


def check_group(txt):
    if len(txt) != 7:
        return 0
    if txt[0:2].isupper() and txt[2].isdigit() and txt[3] == '-' and txt[4:6].isdigit()\
            and txt[4] > '0' and txt[5] > '0' and txt[6].isupper():
        return 1
    else:
        return 0


def check_role(role):
    if role in roles:
        return 1
    return 0


def name_input(message, bot, user):
    user.name = message.text
    if check_name(user.name, 40, 0):
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(
            message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—àe –∏–º—è (c –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):", reply_markup=hide_markup)
        return 0


def surname_input(message, bot, user):
    user.surname = message.text
    if check_name(user.surname, 40, 0):
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(
            message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é (—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):", reply_markup=hide_markup)
        return 0


def father_name_input(message, bot, user):
    user.father_name = message.text
    if check_name(user.father_name, 40, 0):
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(
            message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ (c –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):", reply_markup=hide_markup)
        return 0


def group_input(message, bot, user):
    user.group = message.text.upper()
    if check_group(user.group):
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(message.chat.id, "üñç –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ñ–æ—Ä–º–∞—Ç–æ–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É –≥—Ä—É–ø–ø—É \
(–≤ —Ñ–æ—Ä–º–∞—Ç–µ \"–ò–£7-23–ë\"):", reply_markup=hide_markup)
        return 0


def role_command_input(message, bot, user):
    user.role_command = message.text
    if check_role(user.role_command):
        user.role_command = roles_en[roles.index(user.role_command)]
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É —Ä–æ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ –¢–∏–º–ª–∏–¥–∞ \
–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–æ –≥–ª–∞–≤–µ —Å –≤–∞–º–∏. –ï—Å–ª–∏ –≤–∞—à —Ç–∏–º–ª–∏–¥ –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è, —Ç–æ —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –ü–û–°–õ–ï \
–Ω–µ–≥–æ):")
        return 0


def team_input(message, bot, user):
    if check_team(message.text):
        if user.role_command == 'TeamLead':
            if not User.objects.filter(team=message.text):
                user.team = message.text
                user.expected_input = ''
                user.save()
                return 1
            else:
                bot.send_message(
                    message.chat.id, "‚õî –î–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–æ. \nüñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:", reply_markup=hide_markup)
                return 0
        if message.text == '–ë–µ–∑ –∫–æ–º–∞–Ω–¥—ã':
            user.team = 'no_team'
            user.expected_input = ''
            user.save()
            return 1
        if User.objects.filter(team=message.text):
            user.team = message.text + '(unreg)'
            apply_to_mentor(bot, message.chat.id, message.text)
            user.expected_input = ''
            user.save()
            bot.send_message(
                message.chat.id, "üîú –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", reply_markup=hide_markup)
            return 1
        else:
            return -1
    else:
        if user.role_command != 'TeamLead':
            common_show_command_list(message, bot)
            send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É. \n "
                     "–í–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ç–∏–º–ª–∏–¥ –ø—Ä–∏–º–µ—Ç –í–∞—Å.", 1, '–ë–µ–∑ –∫–æ–º–∞–Ω–¥—ã', *list_teams_func())
        else:
            bot.send_message(message.chat.id, "üìõ –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã "
                             "(—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã; —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏ —Å–∏–º–≤–æ–ª—ã '-', '_'; —Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è):", reply_markup=hide_markup)
        return 0


def team_type_input(message, bot, user):
    user.team_type = message.text
    if user.team_type in team_types:
        user.expected_input = ''
        user.save()
        return 1
    else:
        bot.send_message(
            message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:")
        return 0


def python_level_input(message, bot, user):
    user.python_level = message.text
    if user.python_level in marks:
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è Python "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):")
        else:
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –í–∞—à—É –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ Python "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):")
        return 0


def c_level_input(message, bot, user):
    user.c_level = message.text
    if user.c_level in marks:
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è –°/C++ "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):")
        else:
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –í–∞—à—É –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ C/C++ "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ")
        return 0


def c_sharp_level_input(message, bot, user):
    user.c_sharp_level = message.text
    if user.c_sharp_level in marks:
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è –°# "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):")
        else:
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –í–∞—à—É –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ C# "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):")
        return 0


def java_level_input(message, bot, user):
    user.java_level = message.text
    if user.java_level in marks:
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è Java "
                             " (–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):")
        else:
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –í–∞—à—É –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ Java "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):")
        return 0


def js_level_input(message, bot, user):
    user.js_level = message.text
    if user.js_level in marks:
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è JavaScript "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):")
        else:
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –í–∞—à—É –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ JavaScript "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):")
        return 0


def user_tech_input(message, user):
    user.user_tech = message.text
    user.expected_input = ''
    user.save()
    return 1


def user_exp_input(message, user):
    user.user_exp = message.text
    user.expected_input = ''
    user.save()
    return 1


def team_idea_input(message, bot, user, min_msg_size=40):
    if len(message.text) >= min_msg_size:
        user.team_idea = message.text
        user.expected_input = ''
        user.save()
        return 1
    else:
        if user.is_mentor == '0':
            bot.send_message(message.chat.id, f"üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–¥–µ–µ–π –í–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ \
(–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –º–µ–Ω—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ –≤–∞—à –ø—Ä–æ–µ–∫—Ç; \
—Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –ø–æ–∂–µ–ª–∞–Ω–∏—è?); –æ—Ç 40 —Å–∏–º–≤–æ–ª–æ–≤):",
                             reply_markup=hide_markup)
        else:
            bot.send_message(message.chat.id, f"üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º–∏ –æ–∂–∏–¥–∞–Ω–∏—è–º–∏ –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ –ø–æ \
–ø–æ–≤–æ–¥—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ (–æ—Ç {min_msg_size} —Å–∏–º–≤–æ–ª–æ–≤):")
        return 0


def registration(message, bot, user):

    if user.expected_input == "surname":
        if surname_input(message, bot, user):
            user.expected_input = 'name'
            user.save()
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è (—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):",
                             reply_markup=hide_markup)

    elif user.expected_input == "name":
        if name_input(message, bot, user):
            user.expected_input = 'father_name'
            user.save()
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ (—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):",
                             reply_markup=hide_markup)

    elif user.expected_input == "father_name":
        if father_name_input(message, bot, user):
            if user.is_mentor == '0':
                user.expected_input = 'group'
                user.save()
                bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É –≥—Ä—É–ø–ø—É (–≤ —Ñ–æ—Ä–º–∞—Ç–µ \"–ò–£7-23–ë\"):",
                                 reply_markup=hide_markup)
            else:
                user.expected_input = 'python_level'
                user.save()
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ Python:"
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):", 5, '1', '2', '3', '4', '5')

    elif user.expected_input == "group":
        if group_input(message, bot, user):
            user.expected_input = 'role_command'
            user.save()
            send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É —Ä–æ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ –¢–∏–º–ª–∏–¥–∞ \
–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–æ –≥–ª–∞–≤–µ —Å –≤–∞–º–∏. –ï—Å–ª–∏ –≤–∞—à —Ç–∏–º–ª–∏–¥ –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è, —Ç–æ —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –ü–û–°–õ–ï \
–Ω–µ–≥–æ):", 2, '–¢–∏–º–ª–∏–¥', '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫', '–î–∏–∑–∞–π–Ω–µ—Ä', '–î—Ä—É–≥–æ–µ')

    elif user.expected_input == "role_command":
        if role_command_input(message, bot, user):
            user.expected_input = 'team'
            user.save()
            if user.role_command != 'TeamLead':
                common_show_command_list(message, bot)
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –í–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã (—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã; *–í–∞–º –ø—Ä–∏–¥–µ—Ç "
                                       "—Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ç–∏–º–ª–∏–¥ –ø—Ä–∏–º–µ—Ç –≤–∞—Å*):", 1, '–ë–µ–∑ –∫–æ–º–∞–Ω–¥—ã', *list_teams_func())
            else:
                bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –í–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã (—Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è, \
–≤–≤–æ–¥ —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã):", reply_markup=hide_markup)

    elif user.expected_input == "team":
        check = team_input(message, bot, user)
        if check == 1:
            if user.role_command == 'TeamLead':
                user.expected_input = 'team_type'
                user.save()
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:", 2, '–ñ–µ–ª–µ–∑–æ', '–í–µ–±', '–ë–æ—Ç', '–ò–≥—Ä–∞',
                         '–î—Ä—É–≥–æ–µ')
            else:
                user.expected_input = 'python_level'
                user.save()
                if user.is_mentor == '0':
                    send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è Python "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
                else:
                    send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ Python "
                             "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º):", 5, '1', '2', '3', '4', '5')
        elif check == -1:
            user.expected_input = 'role_command'
            user.save()
            send_msg(bot, message, msg_team_err + "\n\nüñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ä–æ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ:", 2, '–¢–∏–º–ª–∏–¥',
                     '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫', '–î–∏–∑–∞–π–Ω–µ—Ä', '–î—Ä—É–≥–æ–µ')

    elif user.expected_input == "team_type":
        if team_type_input(message, bot, user):
            user.expected_input = 'python_level'
            user.save()
            if user.is_mentor == '0':
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è Python "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
            else:
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ Python "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ", 5, '1', '2', '3', '4', '5')

    elif user.expected_input == "python_level":
        if python_level_input(message, bot, user):
            if user.is_mentor == '0':
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è C/C++ "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
            else:
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ C/C++ "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ", 5, '1', '2', '3', '4', '5')
            user.expected_input = 'c_level'
            user.save()

    elif user.expected_input == "c_level":
        if c_level_input(message, bot, user):
            if user.is_mentor == '0':
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è C# "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
            else:
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ C# "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ", 5, '1', '2', '3', '4', '5')
            user.expected_input = 'c_sharp_level'
            user.save()

    elif user.expected_input == "c_sharp_level":
        if c_sharp_level_input(message, bot, user):
            if user.is_mentor == '0':
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è Java "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
            else:
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ Java "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ", 5, '1', '2', '3', '4', '5')
            user.expected_input = 'java_level'
            user.save()

    elif user.expected_input == "java_level":
        if java_level_input(message, bot, user):
            if user.is_mentor == '0':
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏—è JavaScript "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –Ω–æ–≤–∏—á–æ–∫, 5 - —ç–∫—Å–ø–µ—Ä—Ç):", 5, '1', '2', '3', '4', '5')
            else:
                send_msg(bot, message, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ JavaScript "
                         "(–æ—Ç 1 –¥–æ 5, –≥–¥–µ 1 - –º–∏–Ω–∏–º—É–º, 5 - –º–∞–∫—Å–∏–º—É–º): ", 5, '1', '2', '3', '4', '5')
            user.expected_input = 'js_level'
            user.save()

    elif user.expected_input == "js_level":
        if js_level_input(message, bot, user):
            if user.is_mentor == '0':
                user.expected_input = 'user_tech'
                user.save()
                bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ \
–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (–ü–æ–¥ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç—Å—è \
–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏, –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –ø—Ä–æ—á–µ–µ):", reply_markup=hide_markup)
            else:
                user.expected_input = 'team_idea'
                user.save()
                bot.send_message(message.chat.id, f"üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ –í–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ \
–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫ –µ–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—é (–æ—Ç 40 —Å–∏–º–≤–æ–ª–æ–≤):", reply_markup=hide_markup)

    elif user.expected_input == "user_tech":
        if user_tech_input(message, user):
            user.expected_input = 'user_exp'
            user.save()
            bot.send_message(message.chat.id, "üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à –æ–ø—ã—Ç (–ü—Ä–∏–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∫–æ–≥–¥–∞-—Ç–æ \
—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –∏ —Ç.–ø.):", reply_markup=hide_markup)

    elif user.expected_input == "user_exp":
        if user_exp_input(message, user):
            user.expected_input = 'team_idea'
            user.save()
            bot.send_message(message.chat.id, f"üñç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–¥–µ–µ–π –í–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ \
(–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –º–µ–Ω—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ –≤–∞—à –ø—Ä–æ–µ–∫—Ç; \
—Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –ø–æ–∂–µ–ª–∞–Ω–∏—è?); –æ—Ç 40 —Å–∏–º–≤–æ–ª–æ–≤):",
                             reply_markup=hide_markup)

    elif user.expected_input == "team_idea":
        if team_idea_input(message, bot, user):
            user.expected_input = 'registration completed'
            user.save()
            send_msg(bot, message, "üçª –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã. \n–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö:",
                     1, 'üìù –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫')
