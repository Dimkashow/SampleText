from telebot import types

import BotFunc.Pavel
from BotFunc.Alexey import sort_by_team_type, show_command_list, show_my_team, \
    kick_from_team, info_list_teams, info_about_students, print_form, users_no_team, \
    kick_names, change_mentor, no_mentor_teams
from BotFunc.Sergey import check_changes, make_changes, change_registration
from BotFunc.models import User

btn_list = ['–ñ–µ–ª–µ–∑–æ', '–í–µ–±', '–ë–æ—Ç', '–ò–≥—Ä–∞', '–î—Ä—É–≥–æ–µ']
btn_lead = ['üîé –ù–∞–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É',
            '‚≠ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π', 'üñç –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é']
btn_mentor = ['üî± –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ', '‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã',
              'üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', 'üî• –ü–æ–¥–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã', 'üñç –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é']
btn_yes_no = ['–î–∞', '–ù–µ—Ç']

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–π


def pars_login(message):
    message_id = message.text[::-1]
    kick_user = ''
    for i in range(1, len(message_id)):
        kick_user += message_id[i]
        if message_id[i + 1] == '@':
            break
    return kick_user[::-1]


def apply_to_mentor(bot, id, text):
    from_user = User.objects.get(user_id=id)
    to_user = User.objects.get(team=text, role_command='TeamLead')

    markup = types.InlineKeyboardMarkup()
    data = '–¥–∞' + '@@@' + str(id) + '@@@' + text
    btn_my_site = types.InlineKeyboardButton(
        text='–î–æ–±–∞–≤–∏—Ç—å', callback_data=data)
    markup.add(btn_my_site)
    data = '–ù–µ—Ç' + '@@@' + str(id) + '@@@' + text
    btn_my_site = types.InlineKeyboardButton(
        text='–ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å', callback_data=data)
    markup.add(btn_my_site)
    data = 'üìÆ –í –í–∞—à—É –∫–æ–º–∞–Ω–¥—É —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å—Å—è @' + from_user.login + ' –î–æ–±–∞–≤–∏—Ç—å?'
    bot.send_message(to_user.user_id, data, reply_markup=markup)


def main_func(message, bot, user):
    markup = types.ReplyKeyboardMarkup()
    if message.text == 'üî• –ü–æ–¥–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã' and user.is_mentor == '1':
        show_command_list(message, bot)

    # –§—É–Ω–∫—Ü–∏—è "–£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π"
    elif message.text == '‚≠ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π':
        team_list = show_my_team(message, bot, user)
        # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª –¢–∏–º–ª–∏–¥ (—Ñ—É–Ω–∫—Ü–∏—è –∫–∏–∫–∞)
        if user.role_command == 'TeamLead':
            names_list = kick_names(team_list)
            if len(team_list) > 1:
                BotFunc.Pavel.send_msg(
                    bot, message, '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å: ', 1, *names_list, 'üîô –ù–∞–∑–∞–¥')

    # –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ
    elif message.text == 'üñç –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é':
        check_changes(message, bot, user)
        make_changes(message, bot, user)
        change_registration(message, bot, user)

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã (Mentor only)
    elif message.text == '‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã' and user.is_mentor == '1':
        BotFunc.Pavel.send_msg(
            bot, message, 'üìù –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å', 3, *btn_list)

    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏—à —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥ (Mentor only)
    elif message.text in btn_list:
        msg = sort_by_team_type(message)
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *btn_mentor)

    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏—à —Å –∫–∏–∫–æ–º —é–∑–µ—Ä–æ–≤ (TeamLead only)
    elif '–ò—Å–∫–ª—é—á–∏—Ç—å' in message.text and user.role_command == 'TeamLead':
        login = pars_login(message)
        kick_from_team(login, bot)
        BotFunc.Pavel.send_msg(bot, message, '@' + login +
                               ' –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã.', 1, *btn_lead)

    # –í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç –∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (Mentor only)
    elif message.text == 'üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã' and user.is_mentor == '1':
        teams = info_list_teams()
        msg = "üìñ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–ø–∏—Å–∫–∞: \n\n"
        for team in teams:
            msg += team + '\n'
        teams.append('üîô –ù–∞–∑–∞–¥')
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *teams)

    # –í—ã–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã, –∞–Ω–∫–µ—Ç—ã —á—å–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω—É–∂–Ω–æ –ø–æ—Å–º—Ç—Ä–µ—Ç—å (Mentor only)
    elif '‚úÖ –ö–æ–º–∞–Ω–¥–∞: ' in message.text and user.is_mentor == '1':
        students = info_about_students(message.text[11:])
        msg = "üéì –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞: \n\n"
        for student in students:
            msg += student + '\n'
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *students)

    # –í—ã–±–æ—Ä –∞–Ω–∫–µ—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ—Å–º—Ç—Ä–µ—Ç—å (Mentor only)
    elif 'üìã –ê–Ω–∫–µ—Ç–∞:' in message.text and user.is_mentor == '1':
        login = pars_login(message)
        user_obj = User.objects.get(login=login)
        msg = print_form(user_obj)
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *btn_mentor)

    # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —é–µ–∑—Ä–∞—Ö –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã (TeamLead only)
    elif 'üîé –ù–∞–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É' == message.text and user.role_command == 'TeamLead':
        msg = users_no_team()
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *btn_lead)

    # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ (Mentor only)
    elif 'üî± –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ' == message.text and user.is_mentor == '1':
        list_teams = no_mentor_teams()
        if len(list_teams) != 0:
            msg = 'üî• –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—â—ë –Ω–µ—Ç –º–µ–Ω—Ç–æ—Ä–∞\nüß† –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –º–µ–Ω—Ç–æ—Ä–æ–º: \n\n'
        else:
            msg = '‚Äº –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∫–æ–º–∞–Ω–¥, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –º–µ–Ω—Ç–æ—Ä–∞'
        for i in range(len(list_teams)):
            msg += 'üíº ' + list_teams[i] + '\n'
            list_teams[i] = 'üíº –ö–æ–º–∞–Ω–¥–∞: ' + list_teams[i]
        list_teams.append('üîô –ù–∞–∑–∞–¥')
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *list_teams)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –º–µ–Ω—Ç–æ—Ä —Ö–æ—á–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ (Mentor only)
    elif 'üíº –ö–æ–º–∞–Ω–¥–∞:' in message.text and user.is_mentor == '1':
        team_name = message.text[11:]
        msg = '‚ùì –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –º–µ–Ω—Ç–æ—Ä–æ–º –≤ –∫–æ–º–∞–Ω–¥–µ ¬´' + team_name + '¬ª‚Äé?\n\
‚Äº –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–µ–Ω—Ç–æ—Ä–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑, –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫–æ–º–∞–Ω–¥—ã.'
        user.who_mentor = team_name
        user.save()
        BotFunc.Pavel.send_msg(bot, message, msg, 2, *btn_yes_no)

    elif '–î–∞' == message.text and user.is_mentor == '1' and user.who_mentor != 'no_mentor':
        lead = User.objects.get(role_command='TeamLead', team=user.who_mentor)
        if lead.who_mentor == 'no_mentor':
            msg = 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã –∫—É—Ä–∏—Ä—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É ¬´' + user.who_mentor + '¬ª.'
            change_mentor(user.who_mentor, user.login, bot)
        else:
            msg = '‚õî –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –∫—Ç–æ —Ç–æ —É—Å–ø–µ–ª –≤–∑—è—Ç—å –∫–æ–º–∞–Ω–¥—É ¬´' + \
                user.who_mentor + '¬ª –Ω–∞ –∫—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–Ω—å—à–µ –í–∞—Å.'
        user.who_mentor = 'no_mentor'
        user.save()
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *btn_mentor)

    elif '–ù–µ—Ç' == message.text and user.is_mentor == '1' and user.who_mentor != 'no_mentor':
        msg = '‚õî –í—ã –Ω–µ —Å—Ç–∞–ª–∏ –º–µ–Ω—Ç–æ—Ä–æ–º –≤ –∫–æ–º–∞–Ω–¥–µ ¬´' + user.who_mentor + '¬ª'
        user.who_mentor = 'no_mentor'
        user.save()
        BotFunc.Pavel.send_msg(bot, message, msg, 1, *btn_mentor)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç
        if user.is_mentor == "0":
            itembt_edit = types.KeyboardButton(btn_lead[2])
            itembt_team = types.KeyboardButton(btn_lead[1])
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ —Å—Ç–¥—É–µ–Ω—Ç–æ–≤ (TeamLead only)
            if user.role_command == "TeamLead":
                itembt_find = types.KeyboardButton(btn_lead[0])
                markup.row(itembt_find)
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—Ç–æ—Ä
        else:
            itembt_edit = types.KeyboardButton(btn_mentor[4])
            itembt_team = types.KeyboardButton(btn_mentor[3])
            itembt_sort_type = types.KeyboardButton(btn_mentor[1])
            itembt_info = types.KeyboardButton(btn_mentor[2])
            itembt_take_team = types.KeyboardButton(btn_mentor[0])
            markup.row(itembt_take_team)
            markup.row(itembt_sort_type)
            markup.row(itembt_info)
        markup.row(itembt_team)
        markup.row(itembt_edit)

        bot.send_message(
            message.chat.id, "‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
